@using Timesheet.Common
@rendermode InteractiveServer

<AuthorizeView>
    <Authorized>
        <FluentStack HorizontalAlignment="@HorizontalAlignment.End"
                     VerticalAlignment="@VerticalAlignment.Center"
                     Style="height: 48px; padding-inline-end: 10px; ">
            <FluentProfileMenu 
                               Status="@PresenceStatus.Available"
                               HeaderButton="Logout"
                               OnHeaderButtonClick="OnLogout"
                               FooterLink=""
                               HeaderLabel=""
                               Initials="@Initials"
                               Image="@Picture"
                               FullName="@Nickname"
                               EMail="@Email"
                               PopoverStyle="min-width: 330px;" />
        </FluentStack>
    </Authorized>
    <NotAuthorized>
        <FluentStack HorizontalAlignment="@HorizontalAlignment.End"
                     VerticalAlignment="@VerticalAlignment.Center"
                     Style="height: 48px; padding-inline-end: 10px; ">
            <FluentButton OnClick="OnLogin">Login</FluentButton>
        </FluentStack>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private string Username = "";
    private string? Nickname = "";
    private string? Email = "";
    private string? Picture = "";
    private string Initials = "nn";

    protected override async Task OnParametersSetAsync()
    {
        if (AuthenticationState is not null)
        {
            var state = await AuthenticationState;

            Username = state?.User?.Identity?.Name ?? string.Empty;
            Nickname = state.GetNicknameForAuthenticatedUser();
            Email = state.GetEmailForAuthenticatedUser();
            Picture = state.GetPictureForAuthenticatedUser();

            if(!string.IsNullOrEmpty(Email))
            {
                var parts = Email.Split("@")[0].Split(".");

                var firstname = parts[0];
                var lastname = parts[^1];

                Initials = firstname.Substring(0, 1) + lastname.Substring(0, 1);
            }
        }
    }

    private async Task OnLogout()
    {
        NavigationManager.NavigateTo("logout", true);
    }

    private async Task OnLogin()
    {
        NavigationManager.NavigateTo("login", true);
    }
}