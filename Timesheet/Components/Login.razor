@rendermode InteractiveServer

<AuthorizeView>
    <Authorized>
        <a href="logout">Log out</a>
        <FluentStack HorizontalAlignment="@HorizontalAlignment.End"
                     VerticalAlignment="@VerticalAlignment.Center"
                     Style="height: 48px; padding-inline-end: 10px; ">
            <FluentProfileMenu 
                               Status="@PresenceStatus.Available"
                               HeaderButton="Logout"
                               OnHeaderButtonClick="OnLogout"
                               FooterLink=""
                               HeaderLabel=""
                               Initials="BG"
                               FullName="@Username"
                               EMail="bill.gates@microsoft.com"
                               PopoverStyle="min-width: 330px;" />
        </FluentStack>
    </Authorized>
    <NotAuthorized>
        <a href="login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    private string Username = "";

    protected override async Task OnParametersSetAsync()
    {
        if (AuthenticationState is not null)
        {
            var state = await AuthenticationState;

            Username = state?.User?.Identity?.Name ?? string.Empty;
        }
    }

    private async Task OnLogout()
    {
        
    }
}