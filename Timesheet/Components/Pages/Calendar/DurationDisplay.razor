@using Timesheet.Common
<FluentTextField
    TextFieldType="TextFieldType.Text"
    ValueChanged="@ValueChanged"
    Value="@Value"
    ReadOnly="@ReadOnly"
    Disabled="@Disabled"
    Appearance="FluentInputAppearance.Filled"

    Style="width: 100%;"
    />

@code {
    [Parameter]
    public TimeSpan? Duration { get; set; }

    [Parameter]
    public bool ReadOnly { get; set; } = false;

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public string? Style { get; set; }

    [Parameter]
    public EventCallback<TimeSpan?> DurationChanged { get; set; }

    private string? Value
    {
        get
        {
            return Duration.HasValue ?
                Duration.Value.ToLongHoursString() :
                null;
        }
    }

    private async Task ValueChanged(string value)
    {
        if (TimeSpan.TryParse(value, out var ts))
        {
            if (ts != Duration)
            {
                Duration = ts;
                await DurationChanged.InvokeAsync(Duration);
            }
        }
        else
        {
            if (Duration != null)
            {
                Duration = null;
                await DurationChanged.InvokeAsync(Duration);
            }
        }        
    }
}
