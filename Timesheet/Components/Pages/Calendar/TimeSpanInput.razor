@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@using Timesheet.Common

@rendermode InteractiveServer

<FluentTimePicker Value="@DurationAsDateTime"
                  ValueChanged="@ValueChanged"
                  Disabled="@Disabled"
                  ReadOnly="@ReadOnly"
                  Style="@Style"/>

@code {
    [Parameter]
    public TimeSpan? Duration { get; set; }

    [Parameter]
    public string? Style { get; set; }

    [Parameter]
    public EventCallback<TimeSpan?> DurationChanged { get; set; }

    [Parameter]
    public bool ReadOnly { get; set; } = false;

    [Parameter]
    public bool Disabled { get; set; } = false;

    private DateTime? DurationAsDateTime => Duration.HasValue ? new DateTime(1, 1, 1, Duration.Value.Hours, Duration.Value.Minutes, Duration.Value.Seconds)  : null;

    private async Task ValueChanged(DateTime? dateTime)
    {
        Duration = dateTime.HasValue ? new TimeSpan(dateTime.Value.Hour, dateTime.Value.Minute, dateTime.Value.Second) : null;

        await DurationChanged.InvokeAsync(Duration);
    }
}
