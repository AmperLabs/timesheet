@using Timesheet.Common
@using Timesheet.Data
@using Timesheet.Services
@rendermode InteractiveServer

@inject CalendarService CalendarService

@if(_week != null)
{
    <table>
        <tr>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Kalenderwoche</FluentLabel></td>
            <td colspan="2"><FluentLabel Typo="Typography.Body" Weight="FontWeight.Normal">@($"{_year}-{_weekNumber}")</FluentLabel></td>
        </tr>

        <tr>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Gesamte Arbeitszeit</FluentLabel></td>
            <td colspan="2"><FluentLabel Typo="Typography.Body" Weight="FontWeight.Normal">@_week.TotalWorkingTime</FluentLabel></td>
        </tr>

        <tr>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Vor Ort</FluentLabel></td>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Normal">@_week.TotalWorkingTimeInPresence</FluentLabel></td>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Normal">@_week.PresenceWorkShare</FluentLabel></td>
        </tr>

        <tr>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Mobilarbeit</FluentLabel></td>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Normal">@_week.BookedMobileWork</FluentLabel></td>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Normal">@_week.MobileWorkShare</FluentLabel></td>
        </tr>



        <tr>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Gebuchte Mobilarbeit</FluentLabel></td>
            <td colspan="2"><FluentLabel Typo="Typography.Body" Weight="FontWeight.Normal">@_week.BookedMobileWork</FluentLabel></td>
        </tr>

        <tr>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Ungebuchte Mobilarbeit</FluentLabel></td>
            <td colspan="2"><FluentLabel Typo="Typography.Body" Weight="FontWeight.Normal">@_week.UnbookedMobileWork</FluentLabel></td>
        </tr>

        
        <tr>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Überstunden</FluentLabel></td>
            <td colspan="2"><FluentLabel Typo="Typography.Body" Weight="FontWeight.Normal">@_week.OvertimeHours</FluentLabel></td>
        </tr>
    </table>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    [Parameter]
    public DateTime? Date { get; set; }

    private string _currentUserId { get; set; }

    private int _year;
    private int _weekNumber;
    private TimesheetWeek? _week;

    protected override async Task OnParametersSetAsync()
    {
        if (Date.HasValue)
        {
            _year = Date.Value.Year;
            _weekNumber = CalendarService.GetCalendarWeekForDate(Date.Value);
        }

        if (authenticationState is not null)
        {
            var state = await authenticationState;
            _currentUserId = state.GetEmailForAuthenticatedUser();
        }

        await LoadWeek();
    }

    private async Task LoadWeek()
    {
        var week = await CalendarService.GetTimesheetWeek(_year, _weekNumber, _currentUserId);

        if (week != null)
        {
            week.ResetDirtyFlag();
            _week = week;
        }
        else
        {
            _week = TimesheetWeek.FromCalendarWeek(_year, _weekNumber);
        }
    }
}
