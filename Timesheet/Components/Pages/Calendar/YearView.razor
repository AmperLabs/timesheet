@using Timesheet.Common
@using Timesheet.Data
@using Timesheet.Services

@rendermode InteractiveServer

@if(_year != null)
{
    <FluentTabs Orientation="Orientation.Horizontal" @bind-ActiveTabId=_activeTabId>
        <FluentTab Label="Buchungen" Id="tab_overview">
            <table>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Kalenderjahr</FluentLabel></td>
                        <td colspan="2"><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@($"{_calendarYear.ToString()}")" Style="width: 100%;"></FluentTextField></td>
                </tr>

                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Gesamte Arbeitszeit</FluentLabel></td>
                    <td colspan="2"><DurationDisplay Duration="@_year.TotalWorkingTime" ReadOnly="true" Style="width: 100%;" /></td>
                </tr>

                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Vor Ort</FluentLabel></td>
                    <td><DurationDisplay Duration="@_year.TotalWorkingTimeInPresence" ReadOnly="true" Style="width: 100%;" /></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@($"{Math.Round(_year.PresenceWorkShare * 100 ?? 0, 1)} %")"></FluentTextField></td>
                </tr>

                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Mobilarbeit</FluentLabel></td>
                    <td><DurationDisplay Duration="@_year.TotalMobileWork" ReadOnly="true" Style="width: 100%;" /></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@($"{Math.Round(_year.MobileWorkShare * 100 ?? 0, 1)} %")"></FluentTextField></td>
                </tr>

                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Ganztägige Mobilarbeit</FluentLabel></td>
                    <td><DurationDisplay Duration="@_year.TotalFullyMobileWork" ReadOnly="true" Style="width: 100%;" /></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@($"{_year.TotalFullyMobileWorkDays} d")"></FluentTextField></td>
                </tr>

                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Anteilige Mobilarbeit</FluentLabel></td>
                    <td colspan="2"><DurationDisplay Duration="@_year.TotalPartlyMobileWork" ReadOnly="true" Style="width: 100%;" /></td>
                </tr>

                @* <tr>
            <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Gebuchte Mobilarbeit</FluentLabel></td>
            <td colspan="2"><TimeSpanInput @bind-Duration=_year.BookedMobileWork Style="width: 100%;" /></td>
            </tr> *@

                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Ungebuchte Mobilarbeit</FluentLabel></td>
                    <td colspan="2"><DurationDisplay Duration="@_year.UnbookedMobileWork" ReadOnly="true" Style="width: 100%;" /></td>
                </tr>                
            </table>
        </FluentTab>
        <FluentTab Label="Überstunden" Id="tab_overtime">
            <table>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Überstunden</FluentLabel></td>
                    <td colspan="2"><DurationDisplay Duration="@_year.OvertimeHours" ReadOnly="true" Style="width: 100%;" /></td>
                </tr>

                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Überstunden aus Vorjahr</FluentLabel></td>
                    <td><TimeSpanInput @bind-Duration=_year.InitialOvertimeHours Style="width: 100%;" /></td>
                </tr>

                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Gesamte Überstunden</FluentLabel></td>
                    <td colspan="2"><DurationDisplay Duration="@_year.TotalOvertimeHours" ReadOnly="true" Style="width: 100%;" /></td>
                </tr>

                <tr>
                    <td></td>
                    <td colspan="2"><FluentButton OnClick="@Save" Disabled="@(!_year.IsDirty)" Style="width: 100%;">Save</FluentButton></td>
                </tr>
            </table>
        </FluentTab>
        <FluentTab Label="Statistik" Id="tab_statistics">
            <table>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Arbeitstage</FluentLabel></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@(_yearStatistics.NumberOfWorkdays.ToString())"></FluentTextField></td>
                </tr>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">AT nur vor Ort</FluentLabel></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@(_yearStatistics.NumberOfWorkdaysInPresence.ToString())"></FluentTextField></td>
                </tr>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">AT mit ant. Mobilarbeit</FluentLabel></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@(_yearStatistics.NumberOfWorkdaysMobilePartly.ToString())"></FluentTextField></td>
                </tr>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">AT nur Mobilarbeit</FluentLabel></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@(_yearStatistics.NumberOfWorkdaysMobileOnly.ToString())"></FluentTextField></td>
                </tr>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Kranktage</FluentLabel></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@(_yearStatistics.NumberOfIllnessDays.ToString())"></FluentTextField></td>
                </tr>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Feiertage</FluentLabel></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@(_yearStatistics.NumberOfVacationDays.ToString())"></FluentTextField></td>
                </tr>
            </table>
        </FluentTab>
        <FluentTab Label="Urlaub" Id="tab_vacation">
            <table>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Urlaubsanspruch</FluentLabel></td>
                    <td><FluentNumberField TValue="int?" Min="0" Max="365" @bind-Value=_year.VacationEntitlement /></td>
                </tr>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Urlaub gebucht</FluentLabel></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@(_year.NumberOfVacationDaysBooked.ToString())"></FluentTextField></td>
                </tr>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Urlaub genommen</FluentLabel></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@(_year.NumberOfVacationDaysTaken.ToString())"></FluentTextField></td>
                </tr>
                <tr>
                    <td><FluentLabel Typo="Typography.Body" Weight="FontWeight.Bold">Urlaub offen</FluentLabel></td>
                    <td><FluentTextField ReadOnly="true" Appearance="FluentInputAppearance.Filled" Value="@(_year.NumberOfVacationDaysNotTaken.ToString())"></FluentTextField></td>
                </tr>
                <tr>
                    <td></td>
                    <td colspan="2"><FluentButton OnClick="@Save" Disabled="@(!_year.IsDirty)" Style="width: 100%;">Save</FluentButton></td>
                </tr>
            </table>
        </FluentTab>
    </FluentTabs>
    
}
else
{
    <div style="width: 300px;display: grid; grid-gap: 12px; grid-auto-flow: column;">
        <FluentProgressRing></FluentProgressRing>
    </div>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    [Inject]
    public CalendarService CalendarService { get; set; }

    [Parameter]
    public DateTime? Date { get; set; }

    [Parameter]
    public EventCallback ValueChanged { get; set; }

    private string _currentUserId;
    private int _calendarYear;
    private TimesheetYear? _year;
    private TimesheetYearStatistics _yearStatistics => new TimesheetYearStatistics(_year.BookedDays);

    private string _activeTabId = "tab_overview";

    protected override async Task OnParametersSetAsync()
    {
        if (Date.HasValue)
        {
            _calendarYear = Date.Value.Year;
        }

        if (authenticationState is not null)
        {
            var state = await authenticationState;
            _currentUserId = state.GetEmailForAuthenticatedUser();
        }

        await LoadYear();
    }

    private async Task LoadYear()
    {
        var year = await CalendarService.GetTimesheetYear(_calendarYear, _currentUserId);

        if (year != null)
        {
            year.ResetDirtyFlag();
            _year = year;
        }
        else
        {
            _year = TimesheetYear.FromYear(_calendarYear);
        }
    }

    private async Task Save()
    {
        if (_year != null)
        {
            await CalendarService.CreateOrUpdateTimesheetYear(_year, _currentUserId);
            _year.ResetDirtyFlag();

            if (ValueChanged.HasDelegate)
            {
                await ValueChanged.InvokeAsync();
            }
        }
    }
}
