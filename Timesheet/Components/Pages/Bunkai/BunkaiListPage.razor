@page "/bunkai"
@using Timesheet.Services
@using Timesheet.Entities

@rendermode InteractiveServer

<h3>Bunkai Liste</h3>

@if(BunkaiList != null)
{
    <table>
        @foreach(var bunkai in BunkaiList)
        {
            <tr>
                <td><a href="/bunkai/@bunkai.KataName">@bunkai.KataName</a></td>
            </tr>
        }
    </table>
    <FluentButton OnClick="OnAddBunkai" >Add Bunkai</FluentButton>
}

@code {
    [Inject] IDialogService DialogService { get; set; }

    [Inject]
    public BunkaiService BunkaiService { get; set; }

    private List<Bunkai>? BunkaiList = null;

    protected override async Task OnParametersSetAsync()
    {
        await LoadBunkaiList();
    }

    private async Task LoadBunkaiList()
    {
        BunkaiList = await BunkaiService.GetAll();
    }

    private async Task OnAddBunkai()
    {
        DialogParameters parameters = new()
        {
            Title = $"Add new Bunkai",
            PrimaryAction = "Save",
            PrimaryActionEnabled = false,
            SecondaryAction = "Cancel",
            Width = "500px",
            TrapFocus = true,
            Modal = true,
            PreventScroll = true
        };

        IDialogReference dialog = await DialogService.ShowDialogAsync<BunkaiEditor>(null, parameters);
        DialogResult? result = await dialog.Result;

        if(!result.Cancelled)
        {
            await LoadBunkaiList();
        }
    }
}
